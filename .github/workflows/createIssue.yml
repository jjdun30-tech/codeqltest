name: Create Issue on Vulnerability in PR

on:
  workflow_run:
    workflows: ["CodeQL Advanced"]  # must match your CodeQL workflow name
    types: [completed]

jobs:
  check-alerts-and-file-issue:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      security-events: read
      issues: write
      contents: write

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Determine PR number and PR ref
        id: pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          EVENT_JSON='${{ toJson(github.event) }}'
          PR_NUM="$(jq -r '.workflow_run.pull_requests[0].number // empty' <<< "$EVENT_JSON")"
          HEAD_REF="$(jq -r '.workflow_run.pull_requests[0].head.ref // empty' <<< "$EVENT_JSON")"

          if [[ -z "$PR_NUM" || -z "$HEAD_REF" ]]; then
            SHA="${{ github.event.workflow_run.head_sha }}"
            gh api "/repos/${{ github.repository }}/commits/$SHA/pulls" -H "Accept: application/vnd.github+json" > prs.json
            PR_NUM="$(jq -r '.[0].number // empty' prs.json)"
            HEAD_REF="$(jq -r '.[0].head.ref // empty' prs.json)"
          fi

          if [[ -z "$PR_NUM" ]]; then
            echo "found=no" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "found=yes" >> "$GITHUB_OUTPUT"
          echo "pr_number=$PR_NUM" >> "$GITHUB_OUTPUT"
          echo "head_ref=$HEAD_REF" >> "$GITHUB_OUTPUT"
          echo "pr_ref=refs/pull/${PR_NUM}/merge" >> "$GITHUB_OUTPUT"

      - name: Fetch Code Scanning alerts for PR (with brief retry)
        id: cs
        if: ${{ steps.pr.outputs.found == 'yes' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          REF="${{ steps.pr.outputs.pr_ref }}"
          COUNT=0
          for i in {1..5}; do
            gh api -H "Accept: application/vnd.github+json" \
              "/repos/${{ github.repository }}/code-scanning/alerts" \
              --method GET \
              -f per_page=100 \
              -f state=open \
              -f ref="$REF" \
              -f tool_name=CodeQL > cs.json || true
            COUNT="$(jq 'length' cs.json 2>/dev/null || echo 0)"
            echo "Attempt $i: found $COUNT open alerts on $REF"
            [[ "$COUNT" -gt 0 ]] && break
            sleep 8
          done
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"

      - name: Prep issue body
        if: ${{ steps.cs.outputs.count != '0' }}
        shell: bash
        run: |
          # Header
          printf '# Open Code Scanning Alerts for PR #%s\n\n' '${{ steps.pr.outputs.pr_number }}' > ISSUE_BODY.md

          # jq filter in a file to avoid YAML/quote hell
          cat > filter.jq <<'JQ'
.[]
| "- **\(.rule.id // .rule?.name // "rule")** (\(.severity // "unknown")): \(.most_recent_instance?.message?.text // "No message") [View alert](\(.html_url // "#"))"
JQ

          jq -r -f filter.jq cs.json >> ISSUE_BODY.md
          sed -n '1,200p' ISSUE_BODY.md

      - name: Create Issue
        if: ${{ steps.cs.outputs.count != '0' }}
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "Security alerts detected in PR #${{ steps.pr.outputs.pr_number }}"
          content-filepath: ISSUE_BODY.md
          labels: "security, automated"
